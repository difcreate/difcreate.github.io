<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>difcreate&#39;s blog</title>
  
  <subtitle>偷得浮生半日闲</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xhjiang.tech/"/>
  <updated>2018-11-07T14:59:00.171Z</updated>
  <id>https://xhjiang.tech/</id>
  
  <author>
    <name>difcreate</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AmbientGAN一文总结与摘录</title>
    <link href="https://xhjiang.tech/2018/11/07/AmbientGAN%E4%B8%80%E6%96%87%E6%80%BB%E7%BB%93%E4%B8%8E%E6%91%98%E5%BD%95/"/>
    <id>https://xhjiang.tech/2018/11/07/AmbientGAN一文总结与摘录/</id>
    <published>2018-11-07T14:40:17.000Z</published>
    <updated>2018-11-07T14:59:00.171Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AmbientGAN-Generative-models-from-lossy-measurements"><a href="#AmbientGAN-Generative-models-from-lossy-measurements" class="headerlink" title="AmbientGAN:Generative models from lossy measurements"></a>AmbientGAN:Generative models from lossy measurements</h1><hr><h2 id="环境GAN：从有损测度中生成模型"><a href="#环境GAN：从有损测度中生成模型" class="headerlink" title="环境GAN：从有损测度中生成模型"></a>环境GAN：从有损测度中生成模型</h2><p><strong>摘要：</strong><br>生成模型提供了一种对于复杂分布中结构进行建模的方式，并且已经被证明可用于很多实际感兴趣的任务中。但是，现在训练生成模型的技术需要访问完全可观测（fully-observed）的样本。在很多场景中，获取完全可观测的样本是昂贵的甚至不可能的，但是获取部分的有噪声的观测样本是比较实惠的。我们考虑在只给予感兴趣的分布的样本的有损失观测情况下，学习一个隐式的生成模型的任务。我们证明了即使在测度模型的某个类的每个样本信息丢失的情况下，真正隐藏的分布也可以被恢复。基于此，我们提出了一种我们称之为环境GAN（<strong>AmbientGAN</strong>）的新的训练生成对抗网络的方法。在三个基准数据集和对于很多测度模型而言，我们证实了方法实质性的定性和定量的改进。用我们方法训练的生成模型可以获得比基准高2-4倍的初始分数（inception score）。</p><hr><p>本文提出的模型很简单，就是生成器需要去拟合的数据分布并不可直接得到，但是知道经过一些处理后得到的原数据的有损数据，并且知道这个处理的过程，于是采用有损数据，并将处理过程整合到GAN的架构中，获得的就是这篇文章提出的AmbientGAN的架构，其具体架构如图所示：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;AmbientGAN-Generative-models-from-lossy-measurements&quot;&gt;&lt;a href=&quot;#AmbientGAN-Generative-models-from-lossy-measurements&quot; class=&quot;headerl
      
    
    </summary>
    
    
      <category term="深度学习，GAN" scheme="https://xhjiang.tech/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%8CGAN/"/>
    
      <category term="科研" scheme="https://xhjiang.tech/tags/%E7%A7%91%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>生成对抗网络(GAN)原理理解</title>
    <link href="https://xhjiang.tech/2018/11/06/%E7%94%9F%E6%88%90%E5%AF%B9%E6%8A%97%E7%BD%91%E7%BB%9C-GAN-%E5%8E%9F%E7%90%86%E7%90%86%E8%A7%A3/"/>
    <id>https://xhjiang.tech/2018/11/06/生成对抗网络-GAN-原理理解/</id>
    <published>2018-11-06T13:06:16.000Z</published>
    <updated>2018-11-07T12:03:58.367Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Generative Adversarial Network</strong>，就是大家耳熟能详的 <strong>GAN</strong>，由 Ian Goodfellow 首先提出，在这两年更是深度学习中最热门的东西，仿佛什么东西都能由 GAN 做出来。我最近刚入门 <strong>GAN</strong>，主要是在哔哩哔哩网站上学习李宏毅教授的<strong>GAN</strong>课程。现在总结一下思路，做一篇笔记。<br><br></p><hr><h1 id="1-GAN基础概念"><a href="#1-GAN基础概念" class="headerlink" title="1. GAN基础概念"></a>1. GAN基础概念</h1><p><strong>GAN</strong>全称是Generative Adversarial Nets，中文叫做“<strong>生成对抗网络</strong>”。<br>在GAN中有2个网络，一个网络用于生成数据，叫做<strong>generator</strong>也就是“<strong>生成器</strong>”。另一个网络用于判别生成数据是否接近于真实，叫做<strong>discriminator</strong>也就是“<strong>判别器</strong>”。<br><br>流程图如下所示：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDWhVyPj0ivBduQzAthEtlQYRuV7ZESOvw&amp;q-sign-time=1541591468;1541593268&amp;q-key-time=1541591468;1541593268&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=cc2de2fba4d67289dfe7ca7b5780334db75a6583&amp;x-cos-security-token=ddfc8a545dc91147c517c5234380dbd571f78fd510001&amp;response-content-disposition=attachment" alt=""></div><br><br><br>首先，有一个一代的 generator，它能生成一些很差的图片，然后有一个一代的discriminator，它能准确的把生成的图片，和真实的图片分类，简而言之，这个 discriminator 就是一个二分类器，对生成的图片输出 0，对真实的图片输出 1。</p><p>接着，开始训练出二代的 generator，它能生成稍好一点的图片，能够让一代的 discriminator 认为这些生成的图片是真实的图片。然后会训练出一个二代的 discriminator，它能准确的识别出真实的图片，和二代 generator 生成的图片。以此类推，会有三代，四代。。。n 代的 generator 和 discriminator，最后 discriminator 无法分辨生成的图片和真实图片，这个网络就拟合了。</p><p>这就是 GAN，运行过程就是这么的简单。这就结束了嘛？显然没有，下面还要介绍一下 GAN 的原理。</p><hr><h1 id="2-GAN原理"><a href="#2-GAN原理" class="headerlink" title="2. GAN原理"></a>2. GAN原理</h1><p>首先我们知道真实图片集的分布 Pdata(x)，x 是一个真实图片，可以想象成一个向量，这个向量集合的分布就是 Pdata。我们需要生成一些也在这个分布内的图片，如果直接就是这个分布的话，怕是做不到的。</p><p>我们现在有的 generator 生成的分布可以假设为 PG(x;θ)，这是一个由 θ 控制的分布，θ 是这个分布的参数（如果是高斯混合模型，那么 θ 就是每个高斯分布的平均值和方差）</p><p>假设我们在真实分布中取出一些数据，{x1, x2, … , xm}，我们想要计算一个似然 PG(xi; θ)。</p><p>对于这些数据，在生成模型中的似然就是<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/1.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDNi0Bsg5QydkxlMUNY29ahl9kMFD4Hvw4&amp;q-sign-time=1541591395;1541593195&amp;q-key-time=1541591395;1541593195&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=7c3f7d9afe8199d9f3ea49b73ee66a39efec7502&amp;x-cos-security-token=81c78b985feb56ee872a2c00727e8db44e50b5b310001&amp;response-content-disposition=attachment" alt=""></div><br>我们想要最大化这个似然，等价于让 generator 生成那些真实图片的概率最大。这就变成了一个<strong>最大似然估计的问题</strong>了，我们需要找到一个 θ* 来最大化这个似然。<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/2.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDWeZstr7lvkbmecS2GkW4CnttRZNNYCR8&amp;q-sign-time=1541591495;1541593295&amp;q-key-time=1541591495;1541593295&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=d328b8438250f4d310b24d0b18fa662260bcb59a&amp;x-cos-security-token=3a7970557101263e1089a6d69f0b90b2b342f4bb10001&amp;response-content-disposition=attachment" alt=""></div></p><p>寻找一个 θ* 来最大化这个似然，等价于最大化 log 似然。因为此时这 m 个数据，是从真实分布中取的，所以也就约等于，真实分布中的所有 x 在 PG 分布中的 log 似然的期望。</p><p>真实分布中的所有 x 的期望，等价于求概率积分，所以可以转化成积分运算，因为减号后面的项和 θ 无关，所以添上之后还是等价的。然后提出共有的项，括号内的反转，max 变 min，就可以转化为 <strong>KL divergence</strong> 的形式了，<strong>KL divergence</strong> 描述的是两个概率分布之间的差异。</p><p>所以最大化似然，让 generator 最大概率的生成真实图片，也就是要找一个 θ 让 PG 更接近于 Pdata。</p><p>那如何来找这个最合理的 θ 呢？我们可以假设 PG(x; θ) 是一个神经网络。</p><p>首先随机一个向量 z，通过 G(z)=x 这个网络，生成图片 x，那么我们如何比较两个分布是否相似呢？只要我们取一组 sample z，这组 z 符合一个分布，那么通过网络就可以生成另一个分布 PG，然后来比较与真实分布 Pdata。</p><p>大家都知道，神经网络只要有非线性激活函数，就可以去拟合任意的函数，那么分布也是一样，所以可以用一直正态分布，或者高斯分布，取样去训练一个神经网络，学习到一个很复杂的分布。<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/3.jpg?q-sign-algorithm=sha1&amp;q-ak=AKID8APajjKNuWJS9aCQkHmcFWEorQ8jD7D9&amp;q-sign-time=1541591517;1541593317&amp;q-key-time=1541591517;1541593317&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=3ec4d14a65862cb65d2163e16460aacd0960a97f&amp;x-cos-security-token=20aa5a08ea0f50eeadae91edc671c12679d7e15510001&amp;response-content-disposition=attachment" alt=""></div></p><p>如何来找到更接近的分布，这就是 GAN 的贡献了。先给出 GAN 的公式：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/4.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDoWe3VUDyqycm7RyqrjwZCnGSzHELr0vj&amp;q-sign-time=1541591545;1541593345&amp;q-key-time=1541591545;1541593345&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=8113178a4281f8a55730f210a51291f721d73046&amp;x-cos-security-token=b40666353c57b5adc316fa0fc9a9f9e919ed848710001&amp;response-content-disposition=attachment" alt=""></div></p><p>这个式子的好处在于，固定 G，max  V(G,D) 就表示 PG 和 Pdata 之间的差异，然后要找一个最好的 G，让这个最大值最小，也就是两个分布之间的差异最小。<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/5.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDYUaGmc2uEkkzGUzxE063Yoat7IH9JZX9&amp;q-sign-time=1541591570;1541593370&amp;q-key-time=1541591570;1541593370&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=127c16952bf66ab22a96622195bdc89003fa130f&amp;x-cos-security-token=5f25638471592a9a75beec512e21faf7269a708d10001&amp;response-content-disposition=attachment" alt=""></div></p><p>表面上看这个的意思是，D 要让这个式子尽可能的大，也就是对于 x 是真实分布中，D(x) 要接近与 1，对于 x 来自于生成的分布，D(x) 要接近于 0，然后 G 要让式子尽可能的小，让来自于生成分布中的 x，D(x) 尽可能的接近 1。</p><p>现在我们先固定 G，来求解最优的 D：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/6.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDWLzH7cLFlZ8Kyzjns5jZxbyJ1DMv4kId&amp;q-sign-time=1541591600;1541593400&amp;q-key-time=1541591600;1541593400&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=919a1842c9519e4e9ec662362053bd4cde761aea&amp;x-cos-security-token=728962d323caf679a36e836883a2163938de362a10001&amp;response-content-disposition=attachment" alt=""></div></p><p>对于一个给定的 x，得到最优的 D 如上图，范围在 (0,1) 内，把最优的 D 带入<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/7.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDkJLBnezxSbp65d2BSn3JZmN9MIZoJJQI&amp;q-sign-time=1541591621;1541593421&amp;q-key-time=1541591621;1541593421&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=f8cff0fa270195317e8c186fea0157efa03b1dd3&amp;x-cos-security-token=75acab77f5437891fb7ecb5cf6cc921da463b1ae10001&amp;response-content-disposition=attachment" alt=""></div></p><p>可以得到：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/8.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDE80S6rrnbdP60A9i6p9jj3ONIC5YyeZu&amp;q-sign-time=1541591651;1541593451&amp;q-key-time=1541591651;1541593451&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=41439a45d80e2b6e9dfb1bf598e32c9104393495&amp;x-cos-security-token=4ee1800772b8da834ddcaad119a016603563d41110001&amp;response-content-disposition=attachment" alt=""></div><div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/8-1.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDbEdE7Zh7Esxyy1b8csaA55VfFZmd4gPR&amp;q-sign-time=1541592169;1541593969&amp;q-key-time=1541592169;1541593969&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=2a50d3908cf3eb79f525f0f081223ca16cc3e7eb&amp;x-cos-security-token=874c459cbef33b6610b15a96ae927ffae886c8d910001&amp;response-content-disposition=attachment" alt=""></div></p><p>JS divergence 是 KL divergence 的对称平滑版本，表示了两个分布之间的差异，这个推导就表明了上面所说的，固定 G。<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/7.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDkJLBnezxSbp65d2BSn3JZmN9MIZoJJQI&amp;q-sign-time=1541591621;1541593421&amp;q-key-time=1541591621;1541593421&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=f8cff0fa270195317e8c186fea0157efa03b1dd3&amp;x-cos-security-token=75acab77f5437891fb7ecb5cf6cc921da463b1ae10001&amp;response-content-disposition=attachment" alt=""></div></p><p>表示两个分布之间的差异，最小值是 -2log2，最大值为 0。</p><p>现在我们需要找个 G，来最小化<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/7.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDkJLBnezxSbp65d2BSn3JZmN9MIZoJJQI&amp;q-sign-time=1541591621;1541593421&amp;q-key-time=1541591621;1541593421&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=f8cff0fa270195317e8c186fea0157efa03b1dd3&amp;x-cos-security-token=75acab77f5437891fb7ecb5cf6cc921da463b1ae10001&amp;response-content-disposition=attachment" alt=""></div></p><p>观察上式，当 PG(x)=Pdata(x) 时，G 是最优的。</p><hr><h1 id="3-训练"><a href="#3-训练" class="headerlink" title="3. 训练"></a>3. 训练</h1><p>有了上面推导的基础之后，我们就可以开始训练 GAN 了。结合我们开头说的，两个网络交替训练，我们可以在起初有一个 G0 和 D0，先训练 D0 找到 ：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/9.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDGIqYYaFOSTaxLBoT0wVPSFZEbK6rrZJs&amp;q-sign-time=1541591672;1541593472&amp;q-key-time=1541591672;1541593472&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=7cf05362dfd80d5fd19e6b991a8462f141ebd7db&amp;x-cos-security-token=13a5612f500464783827e7d395ddde686fea6fb910001&amp;response-content-disposition=attachment" alt=""></div></p><p>然后固定 D0 开始训练 G0， 训练的过程都可以使用 <strong>gradient descent</strong>，以此类推，训练 D1,G1,D2,G2,…</p><p>但是这里有个问题就是，你可能在 D0* 的位置取到了<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/10.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDJCVLVCPzwlaPGM8StdZ8nadi3yz3sy4x&amp;q-sign-time=1541591692;1541593492&amp;q-key-time=1541591692;1541593492&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=a9225d7bfd09820c49e2f8c858a50cfe41bfda6f&amp;x-cos-security-token=b97dd0bfe8cfe72b509e534b773eb5ab1957e5f310001&amp;response-content-disposition=attachment" alt=""></div></p><p>然后更新 G0 为 G1，可能<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/11.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDfEdAa5EucPp2kamKc6Ys2FNQIHeC9fRm&amp;q-sign-time=1541591709;1541593509&amp;q-key-time=1541591709;1541593509&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=55309c3e8da3bf8a4499a5c829f00a81472a7f1c&amp;x-cos-security-token=cb7d9b3d3dcc64fa9c2babd91aa7345edeb4309910001&amp;response-content-disposition=attachment" alt=""></div></p><p>但是并不保证会出现一个新的点 D1* 使得<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/12.jpg?q-sign-algorithm=sha1&amp;q-ak=AKID3okL8rmuLowWC8QS7VIsqx14RiSsVAs5&amp;q-sign-time=1541591727;1541593527&amp;q-key-time=1541591727;1541593527&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=29134c48a4a4c35a454097e82f0fe52957d4b161&amp;x-cos-security-token=d3ad284e07a94dc51b257952efbd7de77d238b0210001&amp;response-content-disposition=attachment" alt=""></div></p><p>这样更新 G 就没达到它原来应该要的效果，如下图所示：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/13.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDDy2YAW1SccPKc8wPFbpp7ZA5cSxqV1cp&amp;q-sign-time=1541591742;1541593542&amp;q-key-time=1541591742;1541593542&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=481aa6cfa37224d266eaab80bdca51fe262f4502&amp;x-cos-security-token=54acc507a82604a6816d554bf06561536965dda210001&amp;response-content-disposition=attachment" alt=""></div></p><p>避免上述情况的方法就是更新 G 的时候，不要更新 G 太多。</p><p>知道了网络的训练顺序，我们还需要设定两个 loss function，一个是 D 的 loss，一个是 G 的 loss。下面是整个 GAN 的训练具体步骤：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/14.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDEqlpcYjXTj8izB3OsFg4TgAs6la3Lcr7&amp;q-sign-time=1541591759;1541593559&amp;q-key-time=1541591759;1541593559&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=4618819c9895b5d38859183ba9d14472b4250944&amp;x-cos-security-token=bbf74c76ad5119e1c93762bb11e5595c22f0e43c10001&amp;response-content-disposition=attachment" alt=""></div></p><p>上述步骤在机器学习和深度学习中也是非常常见，易于理解。</p><hr><h1 id="4-存在的问题"><a href="#4-存在的问题" class="headerlink" title="4. 存在的问题"></a>4. 存在的问题</h1><p>但是上面 G 的 <strong>loss function</strong> 还是有一点小问题，下图是两个函数的图像：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/15.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDml8g67H6N2vV8WVtK9NgYcUpQh1YiFxW&amp;q-sign-time=1541591940;1541593740&amp;q-key-time=1541591940;1541593740&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=7abf97829c9ec11526dd4fb4c2e34b5cac355a9a&amp;x-cos-security-token=51e13b9e423947fe7ea45e313979f9c49369673e10001&amp;response-content-disposition=attachment" alt=""></div></p><p>log(1-D(x)) 是我们计算时 G 的 loss function，但是我们发现，在 D(x) 接近于 0 的时候，这个函数十分平滑，梯度非常的小。这就会导致，在训练的初期，G 想要骗过 D，变化十分的缓慢，而上面的函数，趋势和下面的是一样的，都是递减的。但是它的优势是在 D(x) 接近 0 的时候，梯度很大，有利于训练，在 D(x) 越来越大之后，梯度减小，这也很符合实际，在初期应该训练速度更快，到后期速度减慢。</p><p>所以我们把 G 的 loss function 修改为<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/16.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDL1vRXMGF214YXXnWgbGCxwtATePB1OGs&amp;q-sign-time=1541591918;1541593718&amp;q-key-time=1541591918;1541593718&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=767c97e63d0a6a72ccb0fcdea432fd60d47d3db6&amp;x-cos-security-token=dcc01eb725a87df948d2cade4658bf92d80f473e10001&amp;response-content-disposition=attachment" alt=""></div></p><p>这样可以提高训练的速度。</p><p>还有一个问题，在其他 paper 中提出，就是经过实验发现，经过许多次训练，loss 一直都是平的，也就是<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/17.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDLkOy5N24dxJQZPCY5FVRXCIStdOachPP&amp;q-sign-time=1541591968;1541593768&amp;q-key-time=1541591968;1541593768&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=5df5e128bf9953d96c105e03f559a8745a709220&amp;x-cos-security-token=191089cbdcd62a0d62a5f1ef92a03a50e40d4a1710001&amp;response-content-disposition=attachment" alt=""></div></p><p>JS divergence 一直都是 log2，PG 和 Pdata 完全没有交集，但是实际上两个分布是有交集的，造成这个的原因是因为，我们无法真正计算期望和积分，只能使用 sample 的方法，如果训练的过拟合了，D 还是能够完全把两部分的点分开，如下图：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/18.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDhHDqGGeTbNLhM4qq3t2Ipn4KKVVwmXLU&amp;q-sign-time=1541591993;1541593793&amp;q-key-time=1541591993;1541593793&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=cf022121831240dddf3385e533f6640c77805618&amp;x-cos-security-token=7ae0a2c729b0eb71f2c9a8e7015e58170aadd2a210001&amp;response-content-disposition=attachment" alt=""></div></p><p>对于这个问题，我们是否应该让 D 变得弱一点，减弱它的分类能力，但是从理论上讲，为了让它能够有效的区分真假图片，我们又希望它能够 powerful，所以这里就产生了矛盾。</p><p>还有可能的原因是，虽然两个分布都是高维的，但是两个分布都十分的窄，可能交集相当小，这样也会导致 <strong>JS divergence</strong> 算出来 =log2，约等于没有交集。</p><p>解决的一些方法，有添加噪声，让两个分布变得更宽，可能可以增大它们的交集，这样 JS divergence 就可以计算，但是随着时间变化，噪声需要逐渐变小。</p><p>还有一个问题叫 <strong>Mode Collapse</strong>，如下图：<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/19.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDGwuroT10H75imvVIq9VmZ2c1yVinWQy3&amp;q-sign-time=1541592013;1541593813&amp;q-key-time=1541592013;1541593813&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=80221ba3513178daf7fec817a0f292f0e3b4125f&amp;x-cos-security-token=5e03cae7040c2a8bb24fede9f72ed0d9c08bc0d710001&amp;response-content-disposition=attachment" alt=""></div></p><p>这个图的意思是，data 的分布是一个双峰的，但是学习到的生成分布却只有单峰，我们可以看到模型学到的数据，但是却不知道它没有学到的分布。</p><p>造成这个情况的原因是，KL divergence 里的两个分布写反了<div align="center"><img src="https://xhjiang-1256231208.cos.ap-chengdu.myqcloud.com/hexo-GAN/image/20.jpg?q-sign-algorithm=sha1&amp;q-ak=AKIDznzX4HpBlsNpwXDzZt088AiUaagX7MwT&amp;q-sign-time=1541592029;1541593829&amp;q-key-time=1541592029;1541593829&amp;q-header-list=&amp;q-url-param-list=&amp;q-signature=2a8d20d8af2fc6153d329a541ea90c49791a387b&amp;x-cos-security-token=692829b819dba91d595a5da3a88ab271030b35d910001&amp;response-content-disposition=attachment" alt=""></div></p><p>这个图很清楚的显示了，如果是第一个 KL divergence 的写法，为了防止出现无穷大，所以有 Pdata 出现的地方都必须要有 PG 覆盖，就不会出现 Mode Collapse。</p><hr><h1 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h1><p>这是对 GAN 入门学习做的一些笔记和理解，后来太懒了，不想打公式了，主要是参考了李宏毅老师的视频：<a href="https://www.bilibili.com/video/av24011528/?p=1" target="_blank" rel="noopener">https://www.bilibili.com/video/av24011528/?p=1</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Generative Adversarial Network&lt;/strong&gt;，就是大家耳熟能详的 &lt;strong&gt;GAN&lt;/strong&gt;，由 Ian Goodfellow 首先提出，在这两年更是深度学习中最热门的东西，仿佛什么东西都能由 GAN 做出来。
      
    
    </summary>
    
      <category term="深度学习" scheme="https://xhjiang.tech/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="GAN" scheme="https://xhjiang.tech/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/GAN/"/>
    
    
      <category term="深度学习" scheme="https://xhjiang.tech/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="GAN" scheme="https://xhjiang.tech/tags/GAN/"/>
    
  </entry>
  
  <entry>
    <title>linux基础第六天</title>
    <link href="https://xhjiang.tech/2018/10/29/linux%E5%9F%BA%E7%A1%80%E7%AC%AC%E5%85%AD%E5%A4%A9/"/>
    <id>https://xhjiang.tech/2018/10/29/linux基础第六天/</id>
    <published>2018-10-29T10:13:48.000Z</published>
    <updated>2018-10-29T12:13:44.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h1><hr><p>本篇博文就是这次linux系统学习的最后一篇了，之前我们学习了<strong>常用 Linux 命令的基本使用，文件和目录常用命令,远程管理常用命令,用户权限常用命令</strong>还有<strong>系统信息相关命令</strong>。<br>由于这篇博文要学习的东西不太好分类，所以我们把这部分学习的内容统一划分为<strong>其他命令</strong><br><br></p><hr><p><strong>目标</strong></p><ul><li><p>查找文件</p><ul><li><code>find</code></li></ul></li><li><p>软链接</p><ul><li><code>ln</code></li></ul></li><li><p>打包和压缩</p><ul><li><code>tar</code></li></ul></li><li><p>软件安装</p><ul><li><code>apt-get</code></li></ul></li></ul><hr><h2 id="01-查找文件"><a href="#01-查找文件" class="headerlink" title="01. 查找文件"></a>01. 查找文件</h2><ul><li><code>find</code> 命令功能非常强大，通常用来在 <strong>特定的目录下 搜索</strong> 符合条件的文件</li></ul><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>find [路径] -name “*.py”</td><td>查找指定路径下扩展名是 .py 的文件，包括子目录</td></tr></tbody></table><ul><li><p>如果省略路径，表示在当前文件夹下查找</p></li><li><p>之前学习的通配符，在使用 <code>find</code> 命令时同时可用</p></li><li><p>有关 <code>find</code> 的高级使用，在就业班会讲</p></li></ul><p><strong>演练目标</strong></p><ol><li>搜索桌面目录下，文件名包含 <code>1</code> 的文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name &quot;*1*&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>搜索桌面目录下，所有以 <code>.txt</code> 为扩展名的文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name &quot;*.txt&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>搜索桌面目录下，以数字 <code>1</code> 开头的文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name &quot;1*&quot;</span><br></pre></td></tr></table></figure><hr><h2 id="02-软链接"><a href="#02-软链接" class="headerlink" title="02. 软链接"></a>02. 软链接</h2><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>ln -s 被链接的源文件 链接文件</td><td>建立文件的软链接，用通俗的方式讲<strong>类似于</strong> Windows 下的<strong>快捷方式</strong></td></tr></tbody></table><p><em>注意：</em></p><ul><li><p>没有 <code>-s</code> 选项建立的是一个 <strong>硬链接文件</strong></p></li><li><p>两个文件占用相同大小的硬盘空间，<strong>工作中几乎不会建立文件的硬链接</strong></p></li><li><p><strong>源文件要使用绝对路径</strong>，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用</p></li></ul><p><strong>演练目标</strong></p><ol><li><p>将桌面目录下的 <code>01.py</code> 移动到 <code>demo/b/c</code> 目录下</p></li><li><p>在桌面目录下新建 <code>01.py</code> 的 软链接 <code>FirstPython</code>,分别使用 <strong>相对路径</strong> 和 <strong>绝对路径</strong> 建立 <code>FirstPython</code> 的软链接</p></li><li><p>将 <code>FirstPython</code> 移动到 <code>demo</code> 目录下，对比使用 <strong>相对路径</strong> 和 <strong>绝对路径</strong> 的区别</p></li></ol><p><strong>硬链接简介（知道）</strong></p><ul><li>在使用 <code>ln</code> 创建链接时，如果没有 <code>-s</code> 选项，会创建一个 <strong>硬链接</strong>，而不是软链接</li></ul><p><strong>硬链接演练</strong></p><ol><li><p>在 <code>~/Desktop/demo</code> 目录下建立 <code>~/Desktop/demo/b/c/01.py</code> 的硬链接 <code>01_hard</code></p></li><li><p>使用 <code>ls -l</code> 查看文件的<strong>硬链接数</strong>（硬链接——有多少种方式可以访问文件或者目录）</p></li><li><p>删除<code>~/Desktop/demo/b/c/01.py</code>，并且使用 <code>tree</code> 来确认 <code>demo</code> 目录下的三个链接文件</p></li></ol><blockquote><p><em>在 Linux 中，<strong>文件名</strong> 和 <strong>文件的数据</strong> 是分开存储的</em></p></blockquote><ul><li><p><em>提示：</em></p></li><li><p>在 Linux 中，只有文件的 <code>硬链接数 == 0</code> 才会被删除</p></li><li><p>使用 <code>ls -l</code> 可以查看一个文件的硬链接的数量</p></li><li><p>在日常工作中，几乎不会建立文件的硬链接，知道即可</p></li></ul><hr><h2 id="03-打包压缩"><a href="#03-打包压缩" class="headerlink" title="03. 打包压缩"></a>03. 打包压缩</h2><ul><li><p><strong>打包压缩</strong> 是日常工作中备份文件的一种方式</p></li><li><p>在不同操作系统中，常用的打包压缩方式是不同的</p><ul><li><p><code>Windows</code> 常用 <code>rar</code></p></li><li><p><code>Mac</code> 常用 <code>zip</code></p></li><li><p><code>Linux</code> 常用 <code>tar.gz</code></p></li></ul></li></ul><h3 id="3-1-打包-／-解包"><a href="#3-1-打包-／-解包" class="headerlink" title="3.1 打包 ／ 解包"></a>3.1 打包 ／ 解包</h3><ul><li><p><code>tar</code> 是 Linux 中最常用的 <strong>备份工具</strong>，此命令可以 <strong>把一系列文件</strong> 打包到 <strong>一个大文件中</strong>，也可以把一个 <strong>打包的大文件恢复成一系列文件</strong></p></li><li><p><code>tar</code> 的命令格式如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 打包文件</span><br><span class="line">tar -cvf 打包文件.tar 被打包的文件／路径...</span><br><span class="line"></span><br><span class="line"># 解包文件</span><br><span class="line">tar -xvf 打包文件.tar</span><br></pre></td></tr></table></figure><ul><li><code>tar</code> 选项说明</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>c</td><td>生成档案文件，创建打包文件</td></tr><tr><td>x</td><td>解开档案文件</td></tr><tr><td>v</td><td>列出归档解档的详细过程，显示进度</td></tr><tr><td>f</td><td>指定档案文件名称，f 后面一定是 .tar 文件，所以必须放选项最后</td></tr></tbody></table><blockquote><p><em>注意：<code>f</code> 选项必须放在最后，其他选项顺序可以随意</em></p></blockquote><p><strong>打包解包演练*</strong></p><ol><li><p>删除桌面下的所有内容</p></li><li><p>在桌面下新建三个空白文件 <code>01.py</code>、<code>02.py</code>、<code>03.py</code></p></li><li><p>将这三个文件打一个 <code>py.tar</code> 的包</p></li><li><p>新建 <code>tar</code> 目录，并且将 <code>py.tar</code> 移动到 <code>tar</code> 目录下</p></li><li><p>解包 <code>py.tar</code></p></li></ol><h3 id="3-2-压缩／解压缩"><a href="#3-2-压缩／解压缩" class="headerlink" title="3.2 压缩／解压缩"></a>3.2 压缩／解压缩</h3><p><strong>1) gzip</strong></p><ul><li><p><code>tar</code> 与 <code>gzip</code> 命令结合可以使用实现文件 打包和压缩</p><ul><li><p><code>tar</code> 只负责打包文件，但不压缩</p></li><li><p>用 <code>gzip</code> 压缩 <code>tar</code> 打包后的文件，其扩展名一般用 <code>xxx.tar.gz</code></p></li></ul></li></ul><blockquote><p>在 <code>Linux</code> 中，最常见的压缩文件格式就是 <code>xxx.tar.gz</code></p></blockquote><ul><li><p>在 <code>tar</code> 命令中有一个选项 <code>-z</code> 可以调用 <code>gzip</code>，从而可以方便的实现压缩和解压缩的功能</p></li><li><p>命令格式如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 压缩文件</span><br><span class="line">tar -zcvf 打包文件.tar.gz 被压缩的文件／路径...</span><br><span class="line"></span><br><span class="line"># 解压缩文件</span><br><span class="line">tar -zxvf 打包文件.tar.gz</span><br><span class="line"></span><br><span class="line"># 解压缩到指定路径</span><br><span class="line">tar -zxvf 打包文件.tar.gz -C 目标路径</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-C</td><td>解压缩到指定目录，注意：要解压缩的目录必须存在</td></tr></tbody></table><p><strong>2) bzip2(two)</strong></p><ul><li><p><code>tar</code> 与 <code>bzip2</code> 命令结合可以使用实现文件 <strong>打包和压缩</strong>（用法和 <code>gzip</code> 一样）</p><ul><li><p><code>tar</code> 只负责打包文件，但不压缩，</p></li><li><p>用 <code>bzip2</code> 压缩 <code>tar</code> 打包后的文件，其扩展名一般用 <code>xxx.tar.bz2</code></p></li></ul></li><li><p>在 <code>tar</code> 命令中有一个选项 <code>-j</code> 可以调用 <code>bzip2</code>，从而可以方便的实现压缩和解压缩的功能</p></li><li><p>命令格式如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 压缩文件</span><br><span class="line">tar -jcvf 打包文件.tar.bz2 被压缩的文件／路径...</span><br><span class="line"></span><br><span class="line"># 解压缩文件</span><br><span class="line">tar -jxvf 打包文件.tar.bz2</span><br></pre></td></tr></table></figure><hr><h2 id="04-软件安装"><a href="#04-软件安装" class="headerlink" title="04. 软件安装"></a>04. 软件安装</h2><h3 id="4-1-通过-apt-安装／卸载软件"><a href="#4-1-通过-apt-安装／卸载软件" class="headerlink" title="4.1 通过 apt 安装／卸载软件"></a>4.1 通过 apt 安装／卸载软件</h3><ul><li><code>apt</code> 是 <code>Advanced Packaging Tool</code>，是 Linux 下的一款安装包管理工具<br>可以在终端中方便的 <strong>安装／卸载／更新软件包</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 1. 安装软件</span><br><span class="line">$ sudo apt install 软件包</span><br><span class="line"></span><br><span class="line"># 2. 卸载软件</span><br><span class="line">$ sudo apt remove 软件名</span><br><span class="line"></span><br><span class="line"># 3. 更新已安装的包</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure><p><strong>安装演练</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 一个小火车提示</span><br><span class="line">$ sudo apt install sl</span><br><span class="line"></span><br><span class="line"># 一个比较漂亮的查看当前进程排名的软件</span><br><span class="line">$ sudo apt install htop</span><br></pre></td></tr></table></figure><h3 id="4-2-配置软件源"><a href="#4-2-配置软件源" class="headerlink" title="4.2 配置软件源"></a>4.2 配置软件源</h3><ul><li><p>如果希望在 <code>ubuntu</code> 中安装软件，<strong>更加快速</strong>，可以通过设置<strong>镜像源</strong>，选择一个访问网速更快的服务器，来提供软件下载／安装服务</p></li><li><p>提示：更换服务器之后，需要一个相对比较长时间的更新过程，需要耐心等待。更新完成后，再安装软件都会从新设置的服务器下载软件了</p></li></ul><blockquote><p><em>所谓镜像源，就是<strong>所有服务器的内容是相同的（镜像）</strong>，但是根据所在位置不同，国内服务器通常速度会更快一些！</em></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;其他命令&quot;&gt;&lt;a href=&quot;#其他命令&quot; class=&quot;headerlink&quot; title=&quot;其他命令&quot;&gt;&lt;/a&gt;其他命令&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;本篇博文就是这次linux系统学习的最后一篇了，之前我们学习了&lt;strong&gt;常用 Linux 命令的基本使用，文
      
    
    </summary>
    
      <category term="Linux操作系统" scheme="https://xhjiang.tech/categories/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="https://xhjiang.tech/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux基础第五天</title>
    <link href="https://xhjiang.tech/2018/10/29/linux%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%BA%94%E5%A4%A9/"/>
    <id>https://xhjiang.tech/2018/10/29/linux基础第五天/</id>
    <published>2018-10-29T10:13:37.000Z</published>
    <updated>2018-10-29T12:16:14.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="系统信息相关命令"><a href="#系统信息相关命令" class="headerlink" title="系统信息相关命令"></a>系统信息相关命令</h1><hr><ul><li><p>本节内容主要是为了方便通过远程终端维护服务器时，查看服务器上当前 <strong>系统日期和时间 ／ 磁盘空间占用情况 ／ 程序执行情况</strong></p></li><li><p>本小结学习的终端命令基本都是查询命令，通过这些命令对系统资源的使用情况有个了解<br><br></p></li></ul><hr><p><strong>目标</strong></p><ul><li><p>时间和日期</p><ul><li><code>date</code></li><li><code>cal</code></li></ul></li><li><p>磁盘和目录空间</p><ul><li><code>df</code></li><li><code>du</code></li></ul></li><li><p>进程信息</p><ul><li><code>ps</code></li><li><code>top</code></li><li><code>kill</code></li></ul></li></ul><hr><h2 id="01-时间和日期"><a href="#01-时间和日期" class="headerlink" title="01. 时间和日期"></a>01. 时间和日期</h2><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>date</td><td>查看系统时间</td></tr><tr><td>02</td><td>cal</td><td>calendar 查看日历，-y 选项可以查看一年的日历</td></tr></tbody></table><hr><h2 id="02-磁盘信息"><a href="#02-磁盘信息" class="headerlink" title="02. 磁盘信息"></a>02. 磁盘信息</h2><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>df -h</td><td>disk free 显示磁盘剩余空间</td></tr><tr><td>02</td><td>du -h [目录名]</td><td>disk usage 显示目录下的文件大小</td></tr></tbody></table><p><strong>选项说明</strong></p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-h</td><td>以人性化的方式显示文件大小</td></tr></tbody></table><hr><h2 id="03-进程信息"><a href="#03-进程信息" class="headerlink" title="03. 进程信息"></a>03. 进程信息</h2><ul><li>所谓 <strong>进程</strong>，通俗地说就是 <strong>当前正在执行的一个程序</strong></li></ul><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>ps aux</td><td>process status 查看进程的详细状况</td></tr><tr><td>02</td><td>top</td><td>动态显示运行中的进程并且排序</td></tr><tr><td>03</td><td>kill [-9] 进程代号</td><td>终止指定代号的进程，-9 表示强行终止</td></tr></tbody></table><blockquote><p><code>ps</code> 默认只会显示当前用户通过终端启动的应用程序</p></blockquote><ul><li><code>ps</code> 选项说明功能</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>a</td><td>显示终端上的所有进程，包括其他用户的进程</td></tr><tr><td>u</td><td>显示进程的详细状态</td></tr><tr><td>x</td><td>显示没有控制终端的进程</td></tr></tbody></table><blockquote><p><em>提示：使用 <code>kill</code> 命令时，最好只终止由当前用户开启的进程，而不要终止 <code>root</code> 身份开启的进程，否则可能导致系统崩溃</em></p><ul><li>要退出 <code>top</code> 可以直接输入 <code>q</code></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;系统信息相关命令&quot;&gt;&lt;a href=&quot;#系统信息相关命令&quot; class=&quot;headerlink&quot; title=&quot;系统信息相关命令&quot;&gt;&lt;/a&gt;系统信息相关命令&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本节内容主要是为了方便通过远程终端维护服务器时，查看服务器上当前
      
    
    </summary>
    
      <category term="Linux操作系统" scheme="https://xhjiang.tech/categories/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="https://xhjiang.tech/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux基础第四天</title>
    <link href="https://xhjiang.tech/2018/10/29/linux%E5%9F%BA%E7%A1%80%E7%AC%AC%E5%9B%9B%E5%A4%A9/"/>
    <id>https://xhjiang.tech/2018/10/29/linux基础第四天/</id>
    <published>2018-10-29T10:13:26.000Z</published>
    <updated>2018-10-29T12:17:15.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用户权限相关命令"><a href="#用户权限相关命令" class="headerlink" title="用户权限相关命令"></a>用户权限相关命令</h1><hr><p>本篇博文主要介绍了linux系统中用户权限的相关命令，其中包括了<strong>用户管理</strong>以及<strong>组管理</strong>，此外还介绍了<strong>修改权限</strong>的操作，跟Windows操作系统中的用户管理还是大为不同的。<br><br></p><hr><p><strong>目标</strong></p><ul><li><strong>用户</strong> 和 <strong>权限</strong> 的基本概念</li><li><strong>用户管理</strong> 终端命令</li><li><strong>组管理</strong> 终端命令</li><li><strong>修改权限</strong> 终端命令</li></ul><hr><h2 id="01-用户-和-权限-的基本概念"><a href="#01-用户-和-权限-的基本概念" class="headerlink" title="01. 用户 和 权限 的基本概念"></a>01. 用户 和 权限 的基本概念</h2><h3 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h3><ul><li><p><strong>用户</strong> 是 Linux 系统工作中重要的一环，用户管理包括 <strong>用户</strong> 与 <strong>组</strong> 管理</p></li><li><p>在 Linux 系统中，不论是由本机或是远程登录系统，每个系统都必须<strong>拥有一个账号，并且对于不同的系统资源拥有不同的使用权限</strong></p></li><li><p>在 Linux 中，可以指定 <strong>每一个用户</strong> 针对 <strong>不同的文件或者目录 的</strong> 不同权限</p></li><li><p>对 文件／目录 的权限包括：</p></li></ul><table><thead><tr><th>序号</th><th>权限</th><th>英文</th><th>缩写</th><th>数字代号</th></tr></thead><tbody><tr><td>01</td><td>读</td><td>read</td><td>r</td><td>4</td></tr><tr><td>02</td><td>写</td><td>write</td><td>w</td><td>2</td></tr><tr><td>03</td><td>执行</td><td>excute</td><td>x</td><td>1</td></tr></tbody></table><h3 id="1-2-组"><a href="#1-2-组" class="headerlink" title="1.2 组"></a>1.2 组</h3><ul><li>在实际应用中，可以预先针对 <strong>组</strong> 设置好权限，然后 <strong>将不同的用户添加到对应的组中，从而不用依次为每一个用户设置权限</strong></li></ul><h3 id="1-3-ls-l-扩展"><a href="#1-3-ls-l-扩展" class="headerlink" title="1.3 ls -l 扩展"></a>1.3 ls -l 扩展</h3><ul><li><p><code>ls -l</code> 可以查看文件夹下文件的详细信息，从左到右依次是：</p></li><li><p>权限，第 1 个字符如果是 <code>d</code> 表示目录</p></li><li>硬链接数，通俗地讲，就是有多少种方式，可以访问到当前目录／文件</li><li>拥有者，家目录下 文件／目录 的拥有者通常都是当前用户</li><li>组，在 Linux 中，很多时候，会出现组名和用户名相同的情况，后续会讲</li><li>大小</li><li>时间</li><li>名称</li></ul><h3 id="1-4-chmod-简单使用（重要）"><a href="#1-4-chmod-简单使用（重要）" class="headerlink" title="1.4 chmod 简单使用（重要）"></a>1.4 chmod 简单使用（重要）</h3><ul><li><p><code>chmod</code> 可以修改 <strong>用户／组</strong> 对 <strong>文件／目录</strong> 的权限</p></li><li><p>命令格式如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +/-rwx 文件名|目录名</span><br></pre></td></tr></table></figure><blockquote><p><em>提示：</em>以上方式会一次性修改 <code>拥有者</code> / <code>组</code> 权限，有关 <code>chmod</code> 的高级用法，后续会讲</p></blockquote><h3 id="1-5-超级用户"><a href="#1-5-超级用户" class="headerlink" title="1.5 超级用户"></a>1.5 超级用户</h3><ul><li><p>Linux 系统中的 <code>root</code> 账号通常 <strong>用于系统的维护和管理</strong>，对操作系统的所有资源 <strong>具有所有访问权限</strong></p></li><li><p>在大多数版本的 Linux 中，都不推荐 <strong>直接使用 root 账号登录系统</strong></p></li><li><p>在 Linux 安装的过程中，系统会自动创建一个用户账号，而这个默认的用户就称为“标准用户”</p></li></ul><p><strong>sudo</strong></p><ul><li><p><code>su</code> 是 <code>substitute user</code> 的缩写，表示 <strong>使用另一个用户的身份</strong></p></li><li><p><code>sudo</code> 命令用来以其他身份来执行命令，预设的身份为 <code>root</code></p></li><li><p>用户使用 <code>sudo</code> 时，必须先输入密码，之后有 <strong>5 分钟的有效期限</strong>，超过期限则必须重新输入密码</p></li></ul><blockquote><p><em>若其未经授权的用户企图使用 <code>sudo</code>，则会发出警告邮件给管理员</em></p></blockquote><hr><h2 id="02-组管理-终端命令"><a href="#02-组管理-终端命令" class="headerlink" title="02. 组管理 终端命令"></a>02. 组管理 终端命令</h2><blockquote><p><em>提示：<strong>创建组 / 删除组</strong> 的终端命令都需要通过 <code>sudo</code> 执行</em></p></blockquote><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>groupadd 组名</td><td>添加组</td></tr><tr><td>02</td><td>groupdel 组名</td><td>删除组</td></tr><tr><td>03</td><td>cat /etc/group</td><td>确认组信息</td></tr><tr><td>04</td><td>chgrp -R 组名 文件/目录名</td><td>递归修改文件/目录的所属组</td></tr></tbody></table><blockquote><p><em>提示：</em></p><ul><li><p>组信息保存在 <code>/etc/group</code> 文件中</p></li><li><p><code>/etc</code> 目录是专门用来保存 <strong>系统配置信息</strong> 的目录</p></li></ul></blockquote><ul><li>在实际应用中，可以预先针对 <strong>组</strong> 设置好权限，然后 <strong>将不同的用户添加到对应的组中</strong>，从而<strong>不用依次为每一个用户设置权限</strong></li></ul><p><strong>演练目标</strong></p><ol><li>在 <code>python</code> 用户的桌面文件夹下创建 <code>Python学习</code> 目录</li><li>新建 <code>dev</code> 组</li><li>将 <code>Python学习</code> 目录的组修改为 dev</li></ol><hr><h2 id="03-用户管理-终端命令"><a href="#03-用户管理-终端命令" class="headerlink" title="03. 用户管理 终端命令"></a>03. 用户管理 终端命令</h2><blockquote><p><em>提示：<strong>创建用户 / 删除用户 / 修改其他用户密码</strong> 的终端命令都需要通过 <code>sudo</code> 执行</em></p></blockquote><h3 id="3-1-创建用户／设置密码／删除用户"><a href="#3-1-创建用户／设置密码／删除用户" class="headerlink" title="3.1 创建用户／设置密码／删除用户"></a>3.1 创建用户／设置密码／删除用户</h3><table><thead><tr><th>序号</th><th>命令</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>01</td><td>useradd -m -g 组 新建用户名</td><td>添加新用户</td><td>-m 自动建立用户家目录;<br>  -g 指定用户所在的组，否则会建立一个和同名的组</td></tr><tr><td>02</td><td>passwd 用户名</td><td>设置用户密码</td><td>如果是普通用户，直接用 passwd 可以修改自己的账户密码</td></tr><tr><td>03</td><td>userdel -r 用户名</td><td>删除用户    -r 选项会自动删除用户家目录</td></tr><tr><td>04</td><td>cat /etc/passwd \</td><td>grep</td><td>用户名    确认用户信息</td><td>新建用户后，用户信息会保存在 /etc/passwd 文件中</td></tr></tbody></table><blockquote><p><em>提示：</em></p><ul><li><p>创建用户时，如果忘记添加 <code>-m</code> 选项指定新用户的家目录 —— 最简单的方法就是<strong>删除用户，重新创建</strong></p></li><li><p>创建用户时，默认会创建一个和用户名同名的组名</p></li><li><p>用户信息保存在 <code>/etc/passwd</code> 文件中</p></li></ul></blockquote><h3 id="3-2-查看用户信息"><a href="#3-2-查看用户信息" class="headerlink" title="3.2 查看用户信息"></a>3.2 查看用户信息</h3><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>id [用户名]</td><td>查看用户 UID 和 GID 信息</td></tr><tr><td>02</td><td>who</td><td>查看当前所有登录的用户列表</td></tr><tr><td>03</td><td>whoami</td><td>查看当前登录用户的账户名</td></tr></tbody></table><p><strong>passwd 文件</strong></p><p><code>/etc/passwd</code> 文件存放的是用户的信息，由 6 个分号组成的 7 个信息，分别是</p><ol><li><p>用户名</p></li><li><p>密码（x，表示加密的密码）</p></li><li><p>UID（用户标识）</p></li><li><p>GID（组标识）</p></li><li><p>用户全名或本地帐号</p></li><li><p>家目录</p></li><li><p>登录使用的 Shell，就是登录之后，使用的终端命令，<code>ubuntu</code> 默认是 <code>dash</code></p></li></ol><p><strong>usermod</strong></p><ul><li><p><code>usermod</code> 可以用来设置 <strong>用户</strong> 的 <strong>主组 ／ 附加组</strong> 和 <strong>登录 Shell</strong>，命令格式如下：</p></li><li><p><strong>主组：</strong>通常在新建用户时指定，在 <code>etc/passwd</code> 的第 4 列 <strong>GID 对应的组</strong></p></li><li><p><strong>附加组：</strong>在 <code>etc/group</code> 中最后一列表示该组的用户列表，用于指定 <strong>用户的附加权限</strong></p></li></ul><blockquote><p><em>提示：设置了用户的附加组之后，需要重新登录才能生效！</em></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 修改用户的主组（passwd 中的 GID）</span><br><span class="line">usermod -g 组 用户名</span><br><span class="line"></span><br><span class="line"># 修改用户的附加组</span><br><span class="line">usermod -G 组 用户名</span><br><span class="line"></span><br><span class="line"># 修改用户登录 Shell</span><br><span class="line">usermod -s /bin/bash 用户名</span><br></pre></td></tr></table></figure><blockquote><p><em>注意：默认使用 <code>useradd</code> 添加的用户是没有权限使用 <code>sudo</code> 以 <code>root</code> 身份执行命令的，可以使用以下命令，将用户添加到 <code>sudo</code> 附加组中</em></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -G sudo 用户名</span><br></pre></td></tr></table></figure><p><strong>which（重要）</strong></p><blockquote><p><em>提示:</em></p><ul><li><p><code>/etc/passwd</code> 是用于保存用户信息的文件</p></li><li><p><code>/usr/bin/passwd</code> 是用于修改用户密码的程序</p></li></ul></blockquote><ul><li><code>which</code> 命令可以查看执行命令所在位置，例如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">which ls</span><br><span class="line"></span><br><span class="line"># 输出</span><br><span class="line"># /bin/ls</span><br><span class="line"></span><br><span class="line">which useradd</span><br><span class="line"></span><br><span class="line"># 输出</span><br><span class="line"># /usr/sbin/useradd</span><br></pre></td></tr></table></figure><p><strong>bin 和 sbin</strong></p><ul><li><p>在 <code>Linux</code> 中，绝大多数可执行文件都是保存在 <code>/bin</code>、<code>/sbin</code>、<code>/usr/bin</code>、<code>/usr/sbin</code></p></li><li><p><code>/bin（binary）</code>是二进制执行文件目录，主要用于具体应用</p></li><li><p><code>/sbin（system binary）</code>是系统管理员专用的二进制代码存放目录，主要用于系统管理</p></li><li><p><code>/usr/bin（user commands for applications）</code>后期安装的一些软件</p></li><li><p><code>/usr/sbin（super user commands for applications）</code>超级用户的一些管理程序</p></li></ul><blockquote><p><em>提示：</em></p><ul><li><code>cd</code> 这个终端命令是内置在系统内核中的，没有独立的文件，因此用 <code>which</code> 无法找到 <code>cd</code> 命令的位置*</li></ul></blockquote><h3 id="3-3-切换用户"><a href="#3-3-切换用户" class="headerlink" title="3.3 切换用户"></a>3.3 切换用户</h3><table><thead><tr><th>序号</th><th>命令</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>01</td><td>su - 用户名</td><td>切换用户，并且切换目录</td><td>- 可以切换到用户家目录，否则保持位置不变</td></tr><tr><td>02</td><td>exit</td><td>退出当前登录账户    </td></tr></tbody></table><ul><li><code>su</code> 不接用户名，可以切换到 <code>root</code>，但是不推荐使用，因为不安全</li></ul><h2 id="04-修改文件权限"><a href="#04-修改文件权限" class="headerlink" title="04. 修改文件权限"></a>04. 修改文件权限</h2><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>chown</td><td>修改拥有者</td></tr><tr><td>02</td><td>chgrp</td><td>修改组</td></tr><tr><td>03</td><td>chmod</td><td>修改权限</td></tr></tbody></table><ul><li>命令格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 修改文件|目录的拥有者</span><br><span class="line">chown 用户名 文件名|目录名</span><br><span class="line"></span><br><span class="line"># 递归修改文件|目录的组</span><br><span class="line">chgrp -R 组名 文件名|目录名</span><br><span class="line"></span><br><span class="line"># 递归修改文件权限</span><br><span class="line">chmod -R 755 文件名|目录名</span><br></pre></td></tr></table></figure><ul><li><code>chmod</code> 在设置权限时，可以简单地使用三个数字分别对应 <strong>拥有者 ／ 组</strong> 和 <strong>其他</strong> 用户的权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 直接修改文件|目录的 读|写|执行 权限，但是不能精确到 拥有者|组|其他</span><br><span class="line">chmod +/-rwx 文件名|目录名</span><br></pre></td></tr></table></figure><ul><li><p>常见数字组合有（<code>u</code>表示用户／<code>g</code>表示组／<code>o</code>表示其他）：</p><ul><li><p>777 ===&gt; u=rwx,g=rwx,o=rwx</p></li><li><p>755 ===&gt; u=rwx,g=rx,o=rx</p></li><li><p>644 ===&gt; u=rw,g=r,o=r</p></li></ul></li></ul><p><strong>chmod 演练目标</strong></p><ol><li><p>将 <code>01.py</code> 的权限修改为 <code>u=rwx,g=rx,o=r</code></p></li><li><p>将 <code>123.txt</code> 的权限修改为 <code>u=rw,g=r,o=-</code></p></li><li><p>将 <code>test</code> 目录以及目录下的 <strong>所有</strong> 文件权限修改为 <code>u=rwx,g=rwx,o=rx</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用户权限相关命令&quot;&gt;&lt;a href=&quot;#用户权限相关命令&quot; class=&quot;headerlink&quot; title=&quot;用户权限相关命令&quot;&gt;&lt;/a&gt;用户权限相关命令&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;本篇博文主要介绍了linux系统中用户权限的相关命令，其中包括了&lt;strong&gt;用
      
    
    </summary>
    
      <category term="Linux操作系统" scheme="https://xhjiang.tech/categories/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="https://xhjiang.tech/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux基础第三天</title>
    <link href="https://xhjiang.tech/2018/10/29/linux%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%89%E5%A4%A9/"/>
    <id>https://xhjiang.tech/2018/10/29/linux基础第三天/</id>
    <published>2018-10-29T08:13:39.000Z</published>
    <updated>2018-10-29T12:17:08.005Z</updated>
    
    <content type="html"><![CDATA[<h1 id="远程管理常用命令"><a href="#远程管理常用命令" class="headerlink" title="远程管理常用命令"></a>远程管理常用命令</h1><hr><p>今天继续学习linux基础,本篇博文主要详细描述了关于linux系统的<strong>远程管理常用命令</strong>，下面介绍一下今天的主要学习目标：<br><br><br><br></p><hr><p><strong>目标</strong></p><ul><li><p>关机/重启</p><ul><li><code>shutdown</code></li></ul></li><li><p>查看或配置网卡信息</p><ul><li><code>ifconfig</code></li><li><code>ping</code></li></ul></li><li><p>远程登录和复制文件</p><ul><li><code>ssh</code></li><li><code>scp</code></li></ul></li></ul><hr><h2 id="01-关机-重启"><a href="#01-关机-重启" class="headerlink" title="01. 关机/重启"></a>01. 关机/重启</h2><table><thead><tr><th>序号</th><th>命令</th><th>对应英文</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>shutdown 选项 时间</td><td>shutdown</td><td>关机／重新启动</td></tr></tbody></table><h3 id="1-1-shutdown"><a href="#1-1-shutdown" class="headerlink" title="1.1 shutdown"></a>1.1 shutdown</h3><ul><li><code>shutdown</code>命令可以<strong>安全 关闭</strong> 或者 <strong>重新启动系统</strong></li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-r</td><td>重新启动</td></tr></tbody></table><blockquote><p><em>提示:</em></p><ul><li>不指定选项和参数，默认表示 1 分钟之后 关闭电脑</li><li>远程维护服务器时，最好不要关闭系统，而应该重新启动系统</li></ul></blockquote><ul><li>常用命令示例</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 重新启动操作系统，其中 now 表示现在</span><br><span class="line">$ shutdown -r now</span><br><span class="line"></span><br><span class="line"># 立刻关机，其中 now 表示现在</span><br><span class="line">$ shutdown now</span><br><span class="line"></span><br><span class="line"># 系统在今天的 20:25 会关机</span><br><span class="line">$ shutdown 20:25</span><br><span class="line"></span><br><span class="line"># 系统再过十分钟后自动关机</span><br><span class="line">$ shutdown +10</span><br><span class="line"></span><br><span class="line"># 取消之前指定的关机计划</span><br><span class="line">$ shutdown -c</span><br></pre></td></tr></table></figure><hr><h2 id="02-查看或配置网卡信息"><a href="#02-查看或配置网卡信息" class="headerlink" title="02. 查看或配置网卡信息"></a>02. 查看或配置网卡信息</h2><table><thead><tr><th>序号</th><th>命令</th><th>对应英文</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>ifconfig</td><td>configure a network interface</td><td>查看/配置计算机当前的网卡配置信息</td></tr><tr><td>02</td><td>ping ip地址</td><td>ping</td><td>检测到目标 ip地址 的连接是否正常</td></tr></tbody></table><h3 id="2-1-网卡-和-IP-地址"><a href="#2-1-网卡-和-IP-地址" class="headerlink" title="2.1 网卡 和 IP 地址"></a>2.1 网卡 和 IP 地址</h3><p><strong>网卡</strong></p><ul><li>网卡是一个专门负责网络通讯的硬件设备</li><li><strong>IP 地址</strong>是设置在网卡上的地址信息<blockquote><p><em>我们可以把 <strong>电脑</strong> 比作 <strong>电话</strong>，<strong>网卡</strong> 相当于 <strong>SIM 卡</strong>，<strong>IP 地址</strong> 相当于 <strong>电话号码</strong></em></p></blockquote></li></ul><p><strong>IP 地址</strong></p><ul><li><strong>每台联网的电脑上</strong>都有 <strong>IP 地址</strong>，<strong>是保证电脑之间正常通讯的重要设置</strong><blockquote><p><em>注意：每台电脑的 IP 地址不能相同，否则会出现 IP 地址冲突，并且没有办法正常通讯</em></p></blockquote></li></ul><h3 id="2-2-ifconfig"><a href="#2-2-ifconfig" class="headerlink" title="2.2 ifconfig"></a>2.2 ifconfig</h3><ul><li><code>ifconfig</code> 可以查看／配置计算机当前的网卡配置信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看网卡配置信息</span><br><span class="line">$ ifconfig</span><br><span class="line"></span><br><span class="line"># 查看网卡对应的 IP 地址</span><br><span class="line">$ ifconfig | grep inet</span><br></pre></td></tr></table></figure><blockquote><p><em>提示：一台计算机中有可能会有一个 <strong>物理网卡</strong> 和 <strong>多个虚拟网卡</strong>，在 Linux 中物理网卡的名字通常以 <code>ensXX</code> 表示</em></p></blockquote><ul><li><code>127.0.0.1</code> 被称为 <strong>本地回环/环回地址</strong>，一般用来测试本机网卡是否正常</li></ul><h3 id="2-3-ping"><a href="#2-3-ping" class="headerlink" title="2.3 ping"></a>2.3 ping</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 检测到目标主机是否连接正常</span><br><span class="line">$ ping IP地址</span><br><span class="line"></span><br><span class="line"># 检测本地网卡工作正常</span><br><span class="line">$ ping 127.0.0.1</span><br></pre></td></tr></table></figure><ul><li><code>ping</code> 一般用于检测当前计算机到目标计算机之间的网络 <strong>是否通畅，数值越大，速度越慢</strong><blockquote><ul><li><code>ping</code> 的工作原理与潜水艇的声纳相似，<code>ping</code> 这个命令就是取自 <strong>声纳的声音</strong></li><li>网络管理员之间也常将 <code>ping</code> 用作动词 —— <strong>ping 一下计算机X，看他是否开着</strong></li></ul></blockquote></li></ul><p>原理：网络上的机器都有 <strong>唯一确定的 IP 地址</strong>，我们给<strong>目标 IP 地址</strong>发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，我们可以确定目标主机的存在</p><blockquote><p><em>提示：在 Linux 中，想要终止一个终端程序的执行，绝大多数都可以使用 <code>CTRL + C</code></em></p></blockquote><hr><h2 id="03-远程登录和复制文件"><a href="#03-远程登录和复制文件" class="headerlink" title="03. 远程登录和复制文件"></a>03. 远程登录和复制文件</h2><table><thead><tr><th>序号</th><th>命令</th><th>对应英文</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>ssh 用户名@ip</td><td>secure shell</td><td>关机／重新启动</td></tr><tr><td>02</td><td>scp 用户名@ip:文件名或路径 用户名@ip:文件名或路径</td><td>secure copy</td><td>远程复制文件</td></tr></tbody></table><h3 id="3-1-ssh-基础（重点）"><a href="#3-1-ssh-基础（重点）" class="headerlink" title="3.1 ssh 基础（重点）"></a>3.1 ssh 基础（重点）</h3><p>在 Linux 中 SSH 是 <strong>非常常用</strong> 的工具，通过 <strong>SSH 客户端</strong> 我们可以连接到运行了 <strong>SSH 服务器</strong> 的远程机器上</p><ul><li><strong>SSH 客户端</strong>是一种使用 <code>Secure Shell（SSH）</code> 协议连接到远程计算机的软件程序</li><li><code>SSH</code> 是目前较可靠，<strong>专为远程登录会话和其他网络服务</strong> 提供安全性的协议<ul><li>利用 <code>SSH 协议</code> 可以有效<strong>防止远程管理过程中的信息泄露</strong></li><li>通过 <code>SSH 协议</code> 可以对所有传输的数据进行加密，也能够防止 DNS 欺骗和 IP 欺骗</li></ul></li><li><code>SSH</code> 的另一项优点是传输的数据可以是经过压缩的，所以可以加快传输的速度</li></ul><p><strong>1) 域名 和 端口号</strong></p><p><strong>域名</strong></p><ul><li>由一串 <strong>用点分隔</strong> 的名字组成，例如：<code>www.itcast.cn</code></li><li>是 <strong>IP 地址</strong> 的别名，方便用户记忆</li></ul><p><strong>端口号</strong></p><ul><li><strong>IP 地址：</strong>通过 <strong>IP 地址</strong> 找到网络上的 计算机</li><li><p><strong>端口号：</strong>通过 <strong>端口号</strong> 可以找到 <strong>计算机上运行的应用程序</strong></p><ul><li><strong>SSH 服务器</strong> 的默认端口号是 <code>22</code>，如果是默认端口号，在连接的时候，可以省略</li></ul></li><li><p>常见服务端口号列表：</p></li></ul><table><thead><tr><th>序号</th><th>服务</th><th>端口号</th></tr></thead><tbody><tr><td>01</td><td>SSH 服务器</td><td>22</td></tr><tr><td>02</td><td>Web 服务器</td><td>80</td></tr><tr><td>03</td><td>HTTPS</td><td>443</td></tr><tr><td>04</td><td>FTP 服务器</td><td>21</td></tr></tbody></table><p><strong>2) SSH 客户端的简单使用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [-p port] user@remote</span><br></pre></td></tr></table></figure><ul><li><code>user</code> 是在远程机器上的用户名，如果不指定的话默认为当前用户</li><li><code>remote</code> 是远程机器的地址，可以是 <strong>IP／域名</strong>，或者是 <strong>后面会提到的别名</strong></li><li><code>port</code> 是 <strong>SSH Server 监听的端口</strong>，如果不指定，就为默认值 <code>22</code><blockquote><p><em>提示：</em></p><ul><li>使用 <code>exit</code> 退出当前用户的登录</li></ul><p><em>注意：</em></p><ul><li><code>ssh</code> 这个终端命令只能在 <code>Linux</code> 或者 <code>UNIX</code> 系统下使用</li><li>如果在 <code>Windows</code> 系统中，可以安装 <code>PuTTY</code> 或者 <code>XShell</code> 客户端软件即可</li></ul><p><em>提示：</em></p><ul><li>在工作中，SSH 服务器的端口号很有可能<strong>不是 22</strong>，如果遇到这种情况就需要使用 <code>-p</code> 选项，指定正确的端口号，否则无法正常连接到服务器</li></ul></blockquote></li></ul><h3 id="3-2-scp（掌握）"><a href="#3-2-scp（掌握）" class="headerlink" title="3.2 scp（掌握）"></a>3.2 scp（掌握）</h3><ul><li><p>scp 就是 <code>secure copy</code>，是一个在 Linux 下用来进行 <strong>远程拷贝文件</strong> 的命令</p></li><li><p>它的<strong>地址格式与 ssh 基本相同，需要注意的是</strong>，在指定端口时用的是大写的 <code>-P</code> 而不是小写的￼</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 把本地当前目录下的 01.py 文件 复制到 远程 家目录下的 Desktop/01.py</span><br><span class="line"># 注意：`:` 后面的路径如果不是绝对路径，则以用户的家目录作为参照路径</span><br><span class="line">scp -P port 01.py user@remote:Desktop/01.py</span><br><span class="line"></span><br><span class="line"># 把远程 家目录下的 Desktop/01.py 文件 复制到 本地当前目录下的 01.py</span><br><span class="line">scp -P port user@remote:Desktop/01.py 01.py</span><br><span class="line"></span><br><span class="line"># 加上 -r 选项可以传送文件夹</span><br><span class="line"># 把当前目录下的 demo 文件夹 复制到 远程 家目录下的 Desktop</span><br><span class="line">scp -r demo user@remote:Desktop</span><br><span class="line"></span><br><span class="line"># 把远程 家目录下的 Desktop 复制到 当前目录下的 demo 文件夹</span><br><span class="line">scp -r user@remote:Desktop demo</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-r</td><td>若给出的源文件是目录文件，则 scp 将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td></tr><tr><td>-P</td><td>若远程 SSH 服务器的端口不是 22，需要使用大写字母 -P 选项指定端口</td></tr></tbody></table><blockquote><p><em>注意：</em></p><ul><li>scp 这个终端命令只能在 <code>Linux</code> 或者 <code>UNIX</code> 系统下使用</li><li>如果在 <code>Windows</code> 系统中，可以安装 <code>PuTTY</code>，使用 <code>pscp</code> 命令行工具或者安装 <code>FileZilla</code> 使用 <code>FTP</code> 进行文件传输</li></ul></blockquote><h3 id="3-3-SSH-高级（知道）"><a href="#3-3-SSH-高级（知道）" class="headerlink" title="3.3 SSH 高级（知道）"></a>3.3 SSH 高级（知道）</h3><ul><li>免密码登录</li><li>配置别名</li></ul><blockquote><p><em>提示：有关 SSH 配置信息都保存在用户家目录下的 <code>.ssh</code> 目录下</em></p></blockquote><p><strong>1）免密码登录</strong></p><p><strong>步骤</strong></p><ul><li><p>配置公钥</p><ul><li>执行 <code>ssh-keygen</code> 即可生成 SSH 钥匙，一路回车即可</li></ul></li><li><p>上传公钥到服务器</p><ul><li>执行 <code>ssh-copy-id -p port user@remote</code>，可以让远程服务器记住我们的公钥</li></ul></li></ul><blockquote><p><em>非对称加密算法</em></p><ul><li>使用 <strong>公钥</strong> 加密的数据，需要使用 <strong>私钥</strong> 解密</li><li>使用 <strong>私钥</strong> 加密的数据，需要使用 <strong>公钥</strong> 解密</li></ul></blockquote><p><strong>2) 配置别名</strong></p><p>每次都输入 <code>ssh -p port user@remote</code>，时间久了会觉得很麻烦，特别是当 <code>user</code>, <code>remote</code> 和 <code>port</code> 都得输入，而且还不好记忆</p><p>而 <strong>配置别名</strong> 可以让我们进一步偷懒，譬如用：<code>ssh mac</code> 来替代上面这么一长串，那么就在 <code>~/.ssh/config</code> 里面追加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host mac</span><br><span class="line">    HostName ip地址</span><br><span class="line">    User itheima</span><br><span class="line">    Port 22</span><br></pre></td></tr></table></figure><p><strong>保存之后，即可用</strong> <code>ssh mac</code> <strong>实现远程登录了，</strong><code>scp</code> <strong>同样可以使用</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;远程管理常用命令&quot;&gt;&lt;a href=&quot;#远程管理常用命令&quot; class=&quot;headerlink&quot; title=&quot;远程管理常用命令&quot;&gt;&lt;/a&gt;远程管理常用命令&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;今天继续学习linux基础,本篇博文主要详细描述了关于linux系统的&lt;stron
      
    
    </summary>
    
      <category term="Linux操作系统" scheme="https://xhjiang.tech/categories/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="https://xhjiang.tech/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux基础第二天</title>
    <link href="https://xhjiang.tech/2018/10/28/linux%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
    <id>https://xhjiang.tech/2018/10/28/linux基础第二天/</id>
    <published>2018-10-28T10:52:30.000Z</published>
    <updated>2018-10-29T12:17:01.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件和目录常用命令"><a href="#文件和目录常用命令" class="headerlink" title="文件和目录常用命令"></a>文件和目录常用命令</h1><hr><p>由于一些原因，最近几天都没有继续复习linux基础，现在继续恢复学习。本篇博文主要学习<strong>文件和目录常用命令</strong>。这些命令都是我们在使用linux系统中最常使用到的关于文件和目录的命令<br><br></p><hr><p><strong>目标</strong></p><ul><li><p>查看目录内容</p><ul><li><code>ls</code></li></ul></li><li><p>切换目录</p><ul><li><code>cd</code></li></ul></li><li><p>创建和删除操作</p><ul><li><code>touch</code></li><li><code>rm</code></li><li><code>mkdir</code></li></ul></li><li><p>拷贝和移动文件</p><ul><li><code>cp</code></li><li><code>mv</code></li></ul></li><li><p>查看文件内容</p><ul><li><code>cat</code></li><li><code>more</code></li><li><code>grep</code></li></ul></li><li><p>其他</p><ul><li><code>echo</code></li><li><code>重定向 &gt; 和 &gt;&gt;</code></li><li><code>管道 |</code></li></ul></li></ul><p><strong>文件和目录常用命令</strong></p><hr><h2 id="01-查看目录内容"><a href="#01-查看目录内容" class="headerlink" title="01.查看目录内容"></a>01.查看目录内容</h2><h3 id="1-1-ls-命令说明"><a href="#1-1-ls-命令说明" class="headerlink" title="1.1 ls 命令说明"></a>1.1 <strong>ls</strong> 命令说明</h3><ul><li><code>ls</code> 是英文单词 <strong>list</strong> 的简写，其功能为列出目录的内容，是用户最常用的命令之一，类似于 <strong>DOS</strong> 下的 <code>dir</code> 命令<br><strong>Linux 下文件和目录的特点</strong></li><li>Linux<strong>文件</strong>或者<strong>目录</strong>名称最长可以有<code>256</code>个字符</li><li>以<code>.</code>开头的文件为隐藏文件，需要用<code>-a</code>参数才能显示</li><li><code>.</code>代表当前目录</li><li><code>..</code>代表上一级目录</li></ul><h3 id="1-3-ls-常用选项"><a href="#1-3-ls-常用选项" class="headerlink" title="1.3 ls 常用选项"></a>1.3 <strong>ls</strong> 常用选项</h3><table><thead><tr><th>参数</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td><code>-a</code></td><td style="text-align:left">显示指定目录下所有子目录与文件，包括隐藏文件</td></tr><tr><td><code>-l</code></td><td style="text-align:left">以列表方式显示文件的详细信息</td></tr><tr><td><code>-h</code></td><td style="text-align:left">配合<code>-l</code>以人性化的方式显示文件大小</td></tr></tbody></table><p><strong>计算机中文件大小的表示方式（科普）</strong></p><table><thead><tr><th>单位</th><th>英文</th><th>含义</th></tr></thead><tbody><tr><td>字节</td><td>B（Byte）</td><td>在计算机中作为一个数字单元，一般为 8 位二进制数</td></tr><tr><td>千</td><td>K（Kibibyte）</td><td>1 KB = 1024 B，千字节 （1024 = 2 ** 10）</td></tr><tr><td>兆</td><td>M（Mebibyte）</td><td>1 MB = 1024 KB，百万字节</td></tr><tr><td>千兆</td><td>G（Gigabyte）</td><td>1 GB = 1024 MB，十亿字节，千兆字节</td></tr><tr><td>太</td><td>T（Terabyte）</td><td>1 TB = 1024 GB，万亿字节，太字节</td></tr><tr><td>拍</td><td>P（Petabyte）</td><td>1 PB = 1024 TB，千万亿字节，拍字节</td></tr><tr><td>艾</td><td>E（Exabyte）</td><td>1 EB = 1024 PB，百亿亿字节，艾字节</td></tr><tr><td>泽</td><td>Z（Zettabyte）</td><td>1 ZB = 1024 EB，十万亿亿字节，泽字节</td></tr><tr><td>尧</td><td>Y（Yottabyte）</td><td>1 YB = 1024 ZB，一亿亿亿字节，尧字节</td></tr></tbody></table><h3 id="1-4-ls-通配符的使用"><a href="#1-4-ls-通配符的使用" class="headerlink" title="1.4 ls 通配符的使用"></a>1.4 <strong>ls</strong> 通配符的使用</h3><table><thead><tr><th>通配符</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>代表任意个数个字符</td></tr><tr><td>?</td><td>代表任意一个字符，至少 1 个</td></tr><tr><td>[]</td><td>表示可以匹配字符组中的任一一个</td></tr><tr><td>[abc]</td><td>匹配 a、b、c 中的任意一个</td></tr><tr><td>[a-f]</td><td>匹配从 a 到 f 范围内的的任意一个字符</td></tr></tbody></table><hr><h2 id="02-切换目录"><a href="#02-切换目录" class="headerlink" title="02.切换目录"></a>02.切换目录</h2><h3 id="2-1-cd"><a href="#2-1-cd" class="headerlink" title="2.1 cd"></a>2.1 cd</h3><ul><li><code>cd</code> 是英文单词<strong>change directory</strong>的简写，其功能为更改当前的工作目录，也是用户最常用的命令之一</li></ul><blockquote><p>注意：Linux 所有的 目录 和 文件名 都是大小写敏感的</p></blockquote><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>cd</td><td>切换到当前用户的主目录(/home/用户目录)</td></tr><tr><td>cd ~</td><td>切换到当前用户的主目录(/home/用户目录)</td></tr><tr><td>cd .</td><td>保持在当前目录不变</td></tr><tr><td>cd ..</td><td>切换到上级目录</td></tr><tr><td>cd -</td><td>可以在最近两次工作目录之间来回切换</td></tr></tbody></table><h3 id="2-2-相对路径和绝对路径"><a href="#2-2-相对路径和绝对路径" class="headerlink" title="2.2 相对路径和绝对路径"></a>2.2 相对路径和绝对路径</h3><ul><li><p>相对路径 在输入路径时，最前面不是<code>/</code>或者<code>~</code>，表示相对<strong>当前目录</strong>所在的目录位置</p></li><li><p>绝对路径 在输入路径时，最前面是<code>/</code>或者<code>~</code>，表示从<strong>根目录/家目录 </strong>开始的具体目录位置</p></li></ul><hr><h2 id="03-创建和删除操作"><a href="#03-创建和删除操作" class="headerlink" title="03. 创建和删除操作"></a>03. 创建和删除操作</h2><h3 id="3-1-touch"><a href="#3-1-touch" class="headerlink" title="3.1 touch"></a>3.1 touch</h3><ul><li>创建文件或修改文件时间<ul><li>如果文件<strong>不存在</strong>，可以创建一个空白文件</li><li>如果文件<strong>已经存在</strong>，可以修改文件的末次修改日期</li></ul></li></ul><h3 id="3-2-mkdir"><a href="#3-2-mkdir" class="headerlink" title="3.2 mkdir"></a>3.2 mkdir</h3><ul><li>创建一个新的目录</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-p</td><td>可以递归创建目录</td></tr></tbody></table><p><strong>新建目录的名称</strong>不能与当前目录中<strong>已有的目录或文件</strong>同名</p><h3 id="3-3-rm"><a href="#3-3-rm" class="headerlink" title="3.3 rm"></a>3.3 rm</h3><ul><li>删除文件或目录</li></ul><blockquote><p>使用<code>rm</code>命令要小心，因为文件删除后不能恢复</p></blockquote><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-f</td><td>强制删除，忽略不存在的文件，无需提示</td></tr><tr><td>-r</td><td>递归地删除目录下的内容<strong>删除文件夹</strong>时必须加此参数</td></tr></tbody></table><hr><h2 id="04-拷贝和移动文件"><a href="#04-拷贝和移动文件" class="headerlink" title="04. 拷贝和移动文件"></a>04. 拷贝和移动文件</h2><table><thead><tr><th>序号</th><th>命令</th><th>对应英文</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>tree [目录名]</td><td>tree</td><td>以树状图列出文件目录结构</td></tr><tr><td>02</td><td>cp 源文件 目标文件</td><td>copy</td><td>复制文件或者目录</td></tr><tr><td>03</td><td>mv 源文件 目标文件</td><td>move</td><td>移动文件或者目录／文件或者目录重命名</td></tr></tbody></table><h3 id="4-1-tree"><a href="#4-1-tree" class="headerlink" title="4.1 tree"></a>4.1 tree</h3><ul><li><code>tree</code>命令可以以树状图列出文件目录结构</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-d</td><td>只显示目录</td></tr></tbody></table><h3 id="4-2-cp"><a href="#4-2-cp" class="headerlink" title="4.2 cp"></a>4.2 cp</h3><ul><li><code>cp</code>命令的功能是将给出的<strong>文件*</strong>或<strong>目录</strong>复制到另一个<strong>文件</strong>或<strong>目录</strong>中，相当于 DOS 下的<code>copy</code>命令</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-i</td><td>覆盖文件前提示</td></tr><tr><td>-r</td><td>若给出的源文件是目录文件，则<code>cp</code>将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名</td></tr></tbody></table><h3 id="4-3-mv"><a href="#4-3-mv" class="headerlink" title="4.3 mv"></a>4.3 mv</h3><ul><li><code>mv</code>命令可以用来<strong>移动</strong> <strong>文件</strong>或<strong>目录</strong>，也可以给<strong>文件或目录</strong>重命名</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-i</td><td>覆盖文件前提示</td></tr></tbody></table><hr><h2 id="05-查看文件内容"><a href="#05-查看文件内容" class="headerlink" title="05. 查看文件内容"></a>05. 查看文件内容</h2><table><thead><tr><th>序号</th><th>命令</th><th>对应英文</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>cat 文件名</td><td>concatenate</td><td>查看文件内容、创建文件、文件合并、追加文件内容等功能</td></tr><tr><td>02</td><td>more 文件名</td><td>more</td><td>分屏显示文件内容</td></tr><tr><td>03</td><td>grep 搜索文本 文件名</td><td>grep</td><td>搜索文本文件内容</td></tr></tbody></table><h2 id="5-1-cat"><a href="#5-1-cat" class="headerlink" title="5.1 cat"></a>5.1 cat</h2><ul><li><code>cat</code>命令可以用来<strong>查看文件内容、创建文件、文件合并、追加文件内容</strong>等功能</li><li><code>cat</code>会一次显示所有的内容，适合<strong>查看内容较少</strong>的文本文件</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-b</td><td>对非空输出行编号</td></tr><tr><td>-n</td><td>对输出的所有行编号</td></tr></tbody></table><blockquote><p>Linux 中还有一个<code>nl</code>的命令和<code>cat</code> <code>-b</code>的效果等价</p></blockquote><h2 id="5-2-more"><a href="#5-2-more" class="headerlink" title="5.2 more"></a>5.2 more</h2><ul><li><code>more</code>命令可以用于分屏显示文件内容，每次只显示一页内容</li><li>适合于<strong>查看内容较多</strong>的文本文件</li></ul><p>使用<code>more</code>的操作键：</p><table><thead><tr><th>操作键</th><th>功能</th></tr></thead><tbody><tr><td>空格键</td><td>显示手册页的下一屏</td></tr><tr><td>Enter 键</td><td>一次滚动手册页的一行</td></tr><tr><td>b</td><td>回滚一屏</td></tr><tr><td>f</td><td>前滚一屏</td></tr><tr><td>q</td><td>退出</td></tr><tr><td>/word</td><td>搜索 word 字符串</td></tr></tbody></table><h2 id="5-3-grep"><a href="#5-3-grep" class="headerlink" title="5.3 grep"></a>5.3 grep</h2><ul><li>Linux 系统中 grep 命令是一种强大的文本搜索工具</li><li><code>grep</code>允许对文本文件进行<strong>模式</strong>查找，所谓模式查找，又被称为正则表达式，在就业班会详细讲解</li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>显示匹配行及行号</td></tr><tr><td>-v</td><td>显示不包含匹配文本的所有行（相当于求反）</td></tr><tr><td>-i</td><td>忽略大小写</td></tr></tbody></table><ul><li>常用的两种模式查找</li></ul><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>^a</td><td>行首，搜寻以<code>a</code>开头的行</td></tr><tr><td>ke$</td><td>行尾，搜寻以<code>ke</code>结束的行</td></tr></tbody></table><hr><h2 id="06-其他"><a href="#06-其他" class="headerlink" title="06. 其他"></a>06. 其他</h2><h3 id="6-1-echo-文字内容"><a href="#6-1-echo-文字内容" class="headerlink" title="6.1 echo 文字内容"></a>6.1 echo 文字内容</h3><ul><li><code>echo</code>会在终端中显示参数指定的文字，通常会和<strong>重定向</strong>联合使用</li></ul><h3 id="6-2-重定向-gt-和-gt-gt"><a href="#6-2-重定向-gt-和-gt-gt" class="headerlink" title="6.2 重定向 &gt; 和 &gt;&gt;"></a>6.2 重定向 &gt; 和 &gt;&gt;</h3><ul><li>Linux 允许将命令执行结果<strong>重定向</strong>到一个<strong>文件</strong></li><li>将本应显示在<strong>终端上的内容</strong> <strong>输出／追加</strong>到<strong>指定文件</strong>中</li></ul><p>其中</p><ul><li><code>&gt;</code>表示输出，会覆盖文件原有的内容</li><li><code>&gt;&gt;</code>表示追加，会将内容追加到已有文件的末尾</li></ul><h3 id="6-3-管道"><a href="#6-3-管道" class="headerlink" title="6.3 管道 |"></a>6.3 管道 |</h3><ul><li>Linux 允许将<strong>一个命令的输出</strong>可以<strong>通过管道</strong>做为<strong>另一个命令的输入</strong></li><li>可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里 | 的左右分为两端，左端塞东西（写），右端取东西（读）</li></ul><blockquote><p>常用的管道命令有：</p></blockquote><ul><li><code>more</code>：分屏显示内容</li><li><code>grep</code>：在命令执行结果的基础上查询指定的文本</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;文件和目录常用命令&quot;&gt;&lt;a href=&quot;#文件和目录常用命令&quot; class=&quot;headerlink&quot; title=&quot;文件和目录常用命令&quot;&gt;&lt;/a&gt;文件和目录常用命令&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;由于一些原因，最近几天都没有继续复习linux基础，现在继续恢复学习。本篇
      
    
    </summary>
    
      <category term="Linux操作系统" scheme="https://xhjiang.tech/categories/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="https://xhjiang.tech/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux基础第一天</title>
    <link href="https://xhjiang.tech/2018/10/25/linux%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <id>https://xhjiang.tech/2018/10/25/linux基础第一天/</id>
    <published>2018-10-25T14:57:52.000Z</published>
    <updated>2018-10-29T12:17:29.105Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用-Linux-命令的基本使用"><a href="#常用-Linux-命令的基本使用" class="headerlink" title="常用 Linux 命令的基本使用"></a>常用 Linux 命令的基本使用</h1><p>楼主最近想要复习一下以前学过的linux基础知识，现在准备把一些常用的linux基础命令操作放在自己的博客上，以便下次再用时查阅。<br><br><br>本篇博文主要学习了一些最常用的linux命令。<br><br></p><hr><h2 id="01-学习-Linux-终端命令的原因"><a href="#01-学习-Linux-终端命令的原因" class="headerlink" title="01. 学习 Linux 终端命令的原因"></a>01. 学习 Linux 终端命令的原因</h2><ul><li>Linux 刚面世时并没有图形界面，所有的操作全靠命令完成，如<strong>磁盘操作</strong>、<strong>文件存取</strong>、<strong>目录操作</strong>、<strong>进程管理</strong>、<strong>文件权限</strong>设定等</li><li>在职场中，大量的<strong>服务器维护工作</strong>都是在<strong>远程</strong>通过<strong>SSH</strong>客户端 来完成的，并没有图形界面，所有的维护工作都需要通过命令来完成</li><li>在职场中，作为后端程序员，必须要或多或少的掌握一些 Linux 常用的终端命令</li><li>Linux 发行版本的命令大概有 200 多个，但是常用的命令只有 10 多个而已</li></ul><hr><h2 id="02-常用-Linux-命令的基本使用"><a href="#02-常用-Linux-命令的基本使用" class="headerlink" title="02.常用 Linux 命令的基本使用"></a>02.常用 Linux 命令的基本使用</h2><table><thead><tr><th>序号</th><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>ls</td><td>查看当前文件夹下的内容</td></tr><tr><td>02</td><td>pwd</td><td>查看当前所在文件夹</td></tr><tr><td>03</td><td>cd[目录名]</td><td>切换文件夹</td></tr><tr><td>04</td><td>touch[文件名]</td><td>若文件夹不存在，新建文件</td></tr><tr><td>05</td><td>mkdir[目录名]</td><td>创建目录</td></tr><tr><td>06</td><td>rm[文件名]</td><td>删除指定的文件名</td></tr><tr><td>07</td><td>clear</td><td>清屏</td></tr></tbody></table><blockquote><p><em>小技巧</em></p><ul><li><code>ctrl + shift + =</code><strong>放大</strong>终端窗口的字体显示</li><li><code>ctrl + -</code> <strong>缩小</strong>终端窗口的字体显示</li></ul></blockquote><hr><h2 id="03-自动补全"><a href="#03-自动补全" class="headerlink" title="03.自动补全"></a>03.自动补全</h2><ul><li>在敲出<code>文件</code>/<code>目录</code>/<code>命令</code>的前几个字母之后，按下<code>tab</code>键<ul><li>如果输入的没有歧义，系统会自动补全</li><li>如果还存在其他<code>文件</code>/<code>目录</code>/<code>命令</code>。再按一下<code>tab</code>键，系统会提示可能存在的命令</li></ul></li></ul><blockquote><p><em>小技巧</em></p><ul><li>按 <code>上</code>／<code>下</code> 光标键可以在曾经使用过的命令之间来回切换</li><li>如果想要退出选择，并且不想执行当前选中的命令，可以按 <code>ctrl + c</code></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用-Linux-命令的基本使用&quot;&gt;&lt;a href=&quot;#常用-Linux-命令的基本使用&quot; class=&quot;headerlink&quot; title=&quot;常用 Linux 命令的基本使用&quot;&gt;&lt;/a&gt;常用 Linux 命令的基本使用&lt;/h1&gt;&lt;p&gt;楼主最近想要复习一下以前学过
      
    
    </summary>
    
      <category term="Linux操作系统" scheme="https://xhjiang.tech/categories/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="https://xhjiang.tech/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xhjiang.tech/2018/10/23/hello-world/"/>
    <id>https://xhjiang.tech/2018/10/23/hello-world/</id>
    <published>2018-10-23T13:54:02.022Z</published>
    <updated>2018-10-23T13:54:02.022Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
